version: "3.7"

x-airflow-common: &airflow-common
  build:
    context: .
    target: airflow
  environment: &airflow-common-env
    AIRFLOW_FERNET_KEY: Z2uDm0ZL60fXNkEXG8LW99Ki2zf8wkmIltaTz1iQPDU=
    AIRFLOW__CORE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres:5432/airflow
    AIRFLOW__CELERY__RESULT_BACKEND: db+postgresql://airflow:airflow@postgres/airflow
    AIRFLOW__CELERY__BROKER_URL: redis://:@redis:6379/0
    AIRFLOW__CORE__EXECUTOR: CeleryExecutor
    AIRFLOW__CORE__LOAD_EXAMPLES: "False"
    AIRFLOW_CONN_FOOD_DELIVERY_DB: postgres://food_delivery:food_delivery@postgres:5432/food_delivery
    AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION: "False"
    OPENLINEAGE_URL: http://backend:5000
    OPENLINEAGE_NAMESPACE: food_delivery
  volumes:
    - ./airflow/config/log_config.py:/opt/airflow/config/log_config.py
    - ./airflow/dags:/opt/airflow/dags
    - ./airflow/logs:/opt/airflow/logs:rw

services:
  integration:
    build:
      context: .
      target: integration
    volumes:
      - ./docker/wait-for-it.sh:/wait-for-it.sh
    depends_on:
      - airflow
      - backend
    entrypoint: ["./wait-for-it.sh", "backend:5000", "--", "./entrypoint.sh"]

  airflow:
    <<: *airflow-common
    ports:
      - "8080:8080"
    command: webserver
    depends_on:
      - airflow_scheduler
      - postgres
    healthcheck:
      test: [ "CMD", "curl", "--fail", "http://localhost:8080/health" ]
      interval: 10s
      timeout: 10s
      retries: 5
    restart: always
    environment:
      <<: *airflow-common-env
      AIRFLOW__LINEAGE__BACKEND: openlineage.airflow.backend.OpenLineageBackend

  airflow_scheduler:
    <<: *airflow-common
    command: scheduler
    healthcheck:
      test: [ "CMD-SHELL", 'airflow jobs check --job-type SchedulerJob --hostname "$${HOSTNAME}"' ]
      interval: 10s
      timeout: 10s
      retries: 5
    restart: always
    environment:
      <<: *airflow-common-env
      AIRFLOW__LINEAGE__BACKEND: openlineage.airflow.backend.OpenLineageBackend

  airflow_worker:
    <<: *airflow-common
    command: celery worker
    restart: always
    healthcheck:
      test: [ "CMD-SHELL", 'celery --app airflow.executors.celery_executor.app inspect ping -d "celery@$${HOSTNAME}"' ]
      interval: 10s
      timeout: 10s
      retries: 5
    environment:
      <<: *airflow-common-env
      AIRFLOW__LINEAGE__BACKEND: openlineage.airflow.backend.OpenLineageBackend

  backend:
    build:
      context: server
      dockerfile: Dockerfile
    environment:
      - FLASK_APP=app.py
      - FLASK_RUN_PORT=5000

  airflow-init:
    <<: *airflow-common
    command: db init

  backend:
    build:
      context: server
      dockerfile: Dockerfile
    environment:
      - FLASK_APP=app.py
      - FLASK_RUN_PORT=5000

  redis:
    image: redis:latest
    ports:
      - 6379:6379
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 30s
      retries: 50
    restart: always

  postgres:
    image: bitnami/postgresql:12.1.0
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - AIRFLOW_USER=airflow
      - AIRFLOW_PASSWORD=airflow
      - AIRFLOW_DB=airflow
      - FOOD_DELIVERY_USER=food_delivery
      - FOOD_DELIVERY_PASSWORD=food_delivery
      - FOOD_DELIVERY_DB=food_delivery
      - ALLOW_EMPTY_PASSWORD=yes
    volumes:
      - ./docker/init-db.sh:/docker-entrypoint-initdb.d/init-db.sh
